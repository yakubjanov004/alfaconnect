from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

def get_warehouse_main_menu(lang: str = "uz") -> ReplyKeyboardMarkup:
    inbox = "üì• Inbox"
    inventory = "üì¶ Inventarizatsiya" if lang == "uz" else "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è"
    orders = "üìã Buyurtmalar" if lang == "uz" else "üìã –ó–∞–∫–∞–∑—ã"
    statistics = "üìä Statistikalar" if lang == "uz" else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    technician_material_to_give = "üì¶ Teknik xodimga mahsulot berish" if lang == "uz" else "üì¶ –û—Ç–¥–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª —Ç–µ—Ö–Ω–∏–∫—É"
    technician_material_balance = "üì¶üîé Teknikda qolgan mat." if lang == "uz" else "üì¶üîé –û—Å—Ç–∞—Ç–æ–∫ –º–∞—Ç. —É —Ç–µ—Ö–Ω–∏–∫–∞"
    export = "üì§ Export" if lang == "uz" else "üì§ –≠–∫—Å–ø–æ—Ä—Ç"
    change_lang = "üåê Tilni o'zgartirish" if lang == "uz" else "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"

    keyboard = [
        [KeyboardButton(text=inbox), KeyboardButton(text=inventory)],
        [KeyboardButton(text=orders), KeyboardButton(text=statistics)],
        [KeyboardButton(text=technician_material_to_give), KeyboardButton(text=technician_material_balance)],
        [KeyboardButton(text=export), KeyboardButton(text=change_lang)],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_inventory_actions_keyboard(lang: str = "uz") -> ReplyKeyboardMarkup:
    uz = {
        "add_new": "üÜï Yangi mahsulot qo'shish",
        "add_existing": "üì¶ Mavjud mahsulot sonini o'zgartirish",
        "update": "‚úèÔ∏è Mahsulotni yangilash",
        "low": "‚ö†Ô∏è Kam zaxira",
        "out": "‚ùå Tugagan mahsulotlar",
        "search": "üîé Qidirish",
        "all": "üìÑ Barcha mahsulotlar",
        "back": "‚óÄÔ∏è Orqaga",
    }
    ru = {
        "add_new": "üÜï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä",
        "add_existing": "üì¶ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞",
        "update": "‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
        "low": "‚ö†Ô∏è –ù–∏–∑–∫–∏–π –∑–∞–ø–∞—Å",
        "out": "‚ùå –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å",
        "search": "üîé –ü–æ–∏—Å–∫",
        "all": "üìÑ –í—Å–µ —Ç–æ–≤–∞—Ä—ã",
        "back": "‚óÄÔ∏è –ù–∞–∑–∞–¥",
    }
    T = uz if lang == "uz" else ru

    keyboard = [
        [KeyboardButton(text=T["add_new"]), KeyboardButton(text=T["add_existing"])],
        [KeyboardButton(text=T["update"]), KeyboardButton(text=T["low"])],
        [KeyboardButton(text=T["out"]), KeyboardButton(text=T["search"])],
        [KeyboardButton(text=T["all"]), KeyboardButton(text=T["back"])],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- STATISTIKA MENYUSI (rasmga mos) ---

def get_warehouse_statistics_keyboard(lang: str = "uz") -> ReplyKeyboardMarkup:

    uz = {
        "inv": "üìä Inventarizatsiya statistikasi",
        "ord": "üì¶ Buyurtmalar statistikasi",
        "low": "‚ö†Ô∏è Kam zaxira statistikasi",
        "fin": "üí∞ Moliyaviy hisobot",
        "range": "üìä Vaqt oralig'idagi statistika",
        "back": "üîô Orqaga",
    }
    ru = {
        "inv": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–∏",
        "ord": "üì¶ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤",
        "low": "‚ö†Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∏–∑–∫–∏—Ö –∑–∞–ø–∞—Å–æ–≤",
        "fin": "üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç",
        "range": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥",
        "back": "üîô –ù–∞–∑–∞–¥",
    }
    T = uz if lang == "uz" else ru
    keyboard = [
        [KeyboardButton(text=T["inv"])],
        [KeyboardButton(text=T["ord"])],
        [KeyboardButton(text=T["low"])],
        [KeyboardButton(text=T["fin"])],
        [KeyboardButton(text=T["range"])],
        [KeyboardButton(text=T["back"])],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_stats_period_keyboard(lang: str = "uz") -> ReplyKeyboardMarkup:

    uz = {
        "daily": "üìä Kunlik statistika",
        "weekly": "üìÖ Haftalik statistika",
        "monthly": "üìÜ Oylik statistika",
        "yearly": "üìà Yillik statistika",
        "back": "üîô Orqaga",
    }
    ru = {
        "daily": "üìä –î–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        "weekly": "üìÖ –ù–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        "monthly": "üìÜ –ú–µ—Å—è—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        "yearly": "üìà –ì–æ–¥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        "back": "üîô –ù–∞–∑–∞–¥",
    }
    T = uz if lang == "uz" else ru
    keyboard = [
        [KeyboardButton(text=T["monthly"]), KeyboardButton(text=T["daily"])],
        [KeyboardButton(text=T["weekly"]),  KeyboardButton(text=T["yearly"])],
        [KeyboardButton(text=T["back"])],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_warehouse_export_types_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:

    uz = {
        "inventory": "üì¶ Inventarizatsiya",
        "statistics": "üìä Statistika"
    }
    ru = {
        "inventory": "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è",
        "statistics": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    }
    T = uz if lang == "uz" else ru
    
    keyboard = [
        [InlineKeyboardButton(text=T["inventory"], callback_data="warehouse_export_inventory")],
        [InlineKeyboardButton(text=T["statistics"], callback_data="warehouse_export_statistics")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_warehouse_material_requests_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """
    Material requests uchun order turlarini tanlash klaviaturasi
    """
    uz = {
        "connection": "üîó Ulanish arizalari materiallari",
        "technician": "üîß Texnik xizmat materiallari",
        "staff": "üë• Xodim arizalari materiallari",
        "back": "‚ùå Yopish"
    }
    ru = {
        "connection": "üîó –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ",
        "technician": "üîß –ú–∞—Ç–µ—Ä–∏–∞–ª—ã —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è", 
        "staff": "üë• –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∑–∞—è–≤–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
        "back": "‚ùå –ó–∞–∫—Ä—ã—Ç—å"
    }
    T = uz if lang == "uz" else ru
    
    keyboard = [
        [InlineKeyboardButton(text=T["connection"], callback_data="warehouse_material_requests_connection")],
        [InlineKeyboardButton(text=T["technician"], callback_data="warehouse_material_requests_technician")],
        [InlineKeyboardButton(text=T["staff"], callback_data="warehouse_material_requests_staff")],
        [InlineKeyboardButton(text=T["back"], callback_data="warehouse_material_requests_back")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_warehouse_export_formats_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:

    back_text = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [InlineKeyboardButton(text="CSV", callback_data="warehouse_format_csv")],
        [InlineKeyboardButton(text="Excel", callback_data="warehouse_format_xlsx")],
        [InlineKeyboardButton(text="Word", callback_data="warehouse_format_docx")],
        [InlineKeyboardButton(text="PDF", callback_data="warehouse_format_pdf")],
        [InlineKeyboardButton(text=back_text, callback_data="warehouse_export_back_types")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_warehouse_inbox_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """
    Ombor inbox uchun order turlarini tanlash klaviaturasi
    """
    uz = {
        "connection": "üîó Ulanish arizalari",
        "technician": "üîß Texnik xizmat",
        "staff": "üë• Xodim arizalari",
        "back": "‚ùå Yopish"
    }
    ru = {
        "connection": "üîó –ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ",
        "technician": "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", 
        "staff": "üë• –ó–∞—è–≤–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
        "back": "‚ùå –ó–∞–∫—Ä—ã—Ç—å"
    }
    T = uz if lang == "uz" else ru
    
    keyboard = [
        [InlineKeyboardButton(text=T["connection"], callback_data="warehouse_inbox_connection")],
        [InlineKeyboardButton(text=T["technician"], callback_data="warehouse_inbox_technician")],
        [InlineKeyboardButton(text=T["staff"], callback_data="warehouse_inbox_staff")],
        [InlineKeyboardButton(text=T["back"], callback_data="warehouse_inbox_back")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_warehouse_inbox_navigation_keyboard(
    current_index: int, 
    total_count: int, 
    lang: str = "uz"
) -> InlineKeyboardMarkup:
    """
    Ombor inbox arizalari orasida navigatsiya qilish uchun klaviatura
    """
    keyboard = []
    
    # Navigation buttons
    nav_row = []
    if current_index > 0:
        nav_row.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è", 
            callback_data=f"warehouse_prev_inbox_{current_index-1}"
        ))
    
    nav_row.append(InlineKeyboardButton(
        text=f"{current_index + 1}/{total_count}",
        callback_data="warehouse_page_info"
    ))
    
    if current_index < total_count - 1:
        nav_row.append(InlineKeyboardButton(
            text="‚û°Ô∏è", 
            callback_data=f"warehouse_next_inbox_{current_index+1}"
        ))
    
    if nav_row:
        keyboard.append(nav_row)
    
    # Back to categories button
    back_text = "üîô Orqaga" if lang == "uz" else "üîô –ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(
        text=back_text, 
        callback_data="warehouse_inbox_back_to_categories"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_connection_inbox_controls(
    current_index: int,
    total_count: int,
    order_id: int,
    lang: str = "uz"
) -> InlineKeyboardMarkup:
    """
    Connection inbox uchun navigatsiya + Tasdiqlash tugmasi.
    """
    keyboard = []

    # Top row: navigation
    nav_row = []
    if current_index > 0:
        nav_row.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è",
            callback_data=f"warehouse_prev_inbox_{current_index-1}"
        ))
    nav_row.append(InlineKeyboardButton(
        text=f"{current_index + 1}/{total_count}",
        callback_data="warehouse_page_info"
    ))
    if current_index < total_count - 1:
        nav_row.append(InlineKeyboardButton(
            text="‚û°Ô∏è",
            callback_data=f"warehouse_next_inbox_{current_index+1}"
        ))
    if nav_row:
        keyboard.append(nav_row)

    # Confirm row
    confirm_text = "‚úÖ Tasdiqlash" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    keyboard.append([
        InlineKeyboardButton(text=confirm_text, callback_data=f"warehouse_confirm_conn_{order_id}")
    ])

    # Back row
    back_text = "üîô Orqaga" if lang == "uz" else "üîô –ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(
        text=back_text,
        callback_data="warehouse_inbox_back_to_categories"
    )])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_technician_inbox_controls(
    current_index: int,
    total_count: int,
    order_id: int,
    lang: str = "uz"
) -> InlineKeyboardMarkup:
    """
    Technician inbox uchun navigatsiya + Tasdiqlash tugmasi.
    """
    keyboard = []

    # Navigation buttons
    nav_row = []
    if current_index > 0:
        nav_row.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è",
            callback_data=f"warehouse_prev_inbox_{current_index-1}"
        ))
    nav_row.append(InlineKeyboardButton(
        text=f"{current_index + 1}/{total_count}",
        callback_data="warehouse_page_info"
    ))
    if current_index < total_count - 1:
        nav_row.append(InlineKeyboardButton(
            text="‚û°Ô∏è",
            callback_data=f"warehouse_next_inbox_{current_index+1}"
        ))
    if nav_row:
        keyboard.append(nav_row)

    # Confirm button with unique callback pattern
    confirm_text = "‚úÖ Tasdiqlash" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    keyboard.append([
        InlineKeyboardButton(text=confirm_text, callback_data=f"warehouse_confirm_tech_{order_id}")
    ])

    # Back button
    back_text = "üîô Orqaga" if lang == "uz" else "üîô –ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(
        text=back_text,
        callback_data="warehouse_inbox_back_to_categories"
    )])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_staff_inbox_controls(
    current_index: int,
    total_count: int,
    order_id: int,
    lang: str = "uz"
) -> InlineKeyboardMarkup:
    """
    Staff inbox uchun navigatsiya + Tasdiqlash tugmasi.
    """
    keyboard = []

    # Navigation buttons
    nav_row = []
    if current_index > 0:
        nav_row.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è",
            callback_data=f"warehouse_prev_inbox_{current_index-1}"
        ))
    nav_row.append(InlineKeyboardButton(
        text=f"{current_index + 1}/{total_count}",
        callback_data="warehouse_page_info"
    ))
    if current_index < total_count - 1:
        nav_row.append(InlineKeyboardButton(
            text="‚û°Ô∏è",
            callback_data=f"warehouse_next_inbox_{current_index+1}"
        ))
    if nav_row:
        keyboard.append(nav_row)

    # Confirm button with unique callback pattern
    confirm_text = "‚úÖ Tasdiqlash" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    keyboard.append([
        InlineKeyboardButton(text=confirm_text, callback_data=f"warehouse_confirm_staff_{order_id}")
    ])

    # Back button
    back_text = "üîô Orqaga" if lang == "uz" else "üîô –ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(
        text=back_text,
        callback_data="warehouse_inbox_back_to_categories"
    )])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_warehouse_material_requests_navigation_keyboard(
    current_index: int, 
    total_count: int, 
    order_type: str,
    lang: str = "uz"
) -> InlineKeyboardMarkup:
    """
    Ombor material so'rovlari orasida navigatsiya qilish uchun klaviatura
    """
    keyboard = []
    
    # Navigation buttons
    nav_row = []
    if current_index > 0:
        nav_row.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è", 
            callback_data=f"warehouse_prev_{order_type}_{current_index-1}"
        ))
    
    nav_row.append(InlineKeyboardButton(
        text=f"{current_index + 1}/{total_count}",
        callback_data="warehouse_page_info"
    ))
    
    if current_index < total_count - 1:
        nav_row.append(InlineKeyboardButton(
            text="‚û°Ô∏è", 
            callback_data=f"warehouse_next_{order_type}_{current_index+1}"
        ))
    
    if nav_row:
        keyboard.append(nav_row)
    
    # Back to categories button
    back_text = "üîô Orqaga" if lang == "uz" else "üîô –ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(
        text=back_text, 
        callback_data="warehouse_back_to_categories"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)