from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from filters.role_filter import RoleFilter
from keyboards.admin_buttons import get_statistics_keyboard
from database.admin_queries import get_user_statistics
from database.admin_system_status_queries import get_system_overview
from database.manager_export import get_manager_statistics_for_export
from database.controller_export import get_controller_statistics_for_export
from database.language_queries import get_user_language

router = Router()
router.message.filter(RoleFilter("admin"))
router.callback_query.filter(RoleFilter("admin"))

@router.message(F.text.in_( ["üìä Statistika", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]))
async def statistics_handler(message: Message):
    """Admin statistika bo'limi - asosiy menyu"""
    lang = await get_user_language(message.from_user.id) or "uz"
    text = ("üìä **Admin Statistika Bo'limi**\n\n" if lang == "uz" else "üìä **–†–∞–∑–¥–µ–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**\n\n")
    text += ("Quyidagi bo'limlardan birini tanlang:" if lang == "uz" else "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤:")
    
    await message.answer(
        text,
        reply_markup=get_statistics_keyboard(lang),
        parse_mode="Markdown"
    )

# Umumiy ko'rinish
@router.callback_query(F.data == "stats_overview")
async def stats_overview_handler(callback: CallbackQuery):
    """Umumiy statistika ko'rinishi"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        # Tizim umumiy ma'lumotlari
        system_stats = await get_system_overview()
        
        text = ("üìà **Umumiy Ko'rinish**\n\n" if lang == "uz" else "üìà **–û–±—â–∏–π –æ–±–∑–æ—Ä**\n\n")
        
        # Foydalanuvchilar
        text += ("üë• **Foydalanuvchilar:**\n" if lang == "uz" else "üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**\n")
        text += (f"‚Ä¢ Jami: {system_stats['total_users']}\n" if lang == "uz" else f"‚Ä¢ –í—Å–µ–≥–æ: {system_stats['total_users']}\n")
        text += (f"‚Ä¢ Faol: {system_stats['active_users']}\n" if lang == "uz" else f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ: {system_stats['active_users']}\n")
        text += (f"‚Ä¢ Bloklangan: {system_stats['blocked_users']}\n\n" if lang == "uz" else f"‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {system_stats['blocked_users']}\n\n")
        
        # Buyurtmalar
        text += ("üìã **Buyurtmalar:**\n" if lang == "uz" else "üìã **–ó–∞—è–≤–∫–∏:**\n")
        text += (f"‚Ä¢ Ulanish: {system_stats['total_connection_orders']}\n" if lang == "uz" else f"‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {system_stats['total_connection_orders']}\n")
        text += (f"‚Ä¢ Texnik: {system_stats['total_technician_orders']}\n" if lang == "uz" else f"‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ: {system_stats['total_technician_orders']}\n")
        text += (f"‚Ä¢ Saff: {system_stats['total_saff_orders']}\n\n" if lang == "uz" else f"‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: {system_stats['total_saff_orders']}\n\n")
        
        # Bugungi buyurtmalar
        text += ("üìÖ **Bugungi buyurtmalar:**\n" if lang == "uz" else "üìÖ **–ó–∞—è–≤–∫–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:**\n")
        text += (f"‚Ä¢ Ulanish: {system_stats['today_connection_orders']}\n" if lang == "uz" else f"‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {system_stats['today_connection_orders']}\n")
        text += (f"‚Ä¢ Texnik: {system_stats['today_technician_orders']}\n" if lang == "uz" else f"‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ: {system_stats['today_technician_orders']}\n")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_statistics_keyboard(lang),
            parse_mode="Markdown"
        )
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            ("‚ùå Statistika ma'lumotlarini yuklashda xatolik yuz berdi." if lang == "uz" else "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."),
            reply_markup=get_statistics_keyboard(lang)
        )

# Foydalanuvchilar statistikasi
@router.callback_query(F.data == "stats_users")
async def stats_users_handler(callback: CallbackQuery):
    """Foydalanuvchilar statistikasi"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        user_stats = await get_user_statistics()
        
        text = ("üë• **Foydalanuvchilar Statistikasi**\n\n" if lang == "uz" else "üë• **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π**\n\n")
        text += ("üìä **Umumiy ma'lumotlar:**\n" if lang == "uz" else "üìä **–û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è:**\n")
        text += (f"‚Ä¢ Jami foydalanuvchilar: {user_stats['total_users']}\n" if lang == "uz" else f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_stats['total_users']}\n")
        text += (f"‚Ä¢ Faol foydalanuvchilar: {user_stats['active_users']}\n" if lang == "uz" else f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {user_stats['active_users']}\n")
        text += (f"‚Ä¢ Bloklangan: {user_stats['blocked_users']}\n\n" if lang == "uz" else f"‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {user_stats['blocked_users']}\n\n")
        
        text += ("üë§ **Rollar bo'yicha:**\n" if lang == "uz" else "üë§ **–ü–æ —Ä–æ–ª—è–º:**\n")
        for role_stat in user_stats['role_statistics']:
            role_name = {
                'admin': ('Admin' if lang == 'uz' else '–ê–¥–º–∏–Ω'),
                'client': ('Mijoz' if lang == 'uz' else '–ö–ª–∏–µ–Ω—Ç'),
                'manager': ('Menejer' if lang == 'uz' else '–ú–µ–Ω–µ–¥–∂–µ—Ä'),
                'junior_manager': ('Kichik menejer' if lang == 'uz' else '–î–∂—É–Ω–∏–æ—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä'),
                'controller': ('Nazoratchi' if lang == 'uz' else '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä'),
                'technician': ('Texnik' if lang == 'uz' else '–¢–µ—Ö–Ω–∏–∫'),
                'warehouse': ('Ombor' if lang == 'uz' else '–°–∫–ª–∞–¥'),
                'callcenter_supervisor': ('Call center supervisor' if lang == 'uz' else '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞'),
                'callcenter_operator': ('Call center operator' if lang == 'uz' else '–û–ø–µ—Ä–∞—Ç–æ—Ä –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞')
            }.get(role_stat['role'], role_stat['role'])
            text += f"‚Ä¢ {role_name}: {role_stat['count']}\n"
        
        await callback.message.edit_text(
            text,
            reply_markup=get_statistics_keyboard(lang),
            parse_mode="Markdown"
        )
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            ("‚ùå Foydalanuvchilar statistikasini yuklashda xatolik yuz berdi." if lang == "uz" else "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."),
            reply_markup=get_statistics_keyboard(lang)
        )

# Ulanish buyurtmalari statistikasi
@router.callback_query(F.data == "stats_connection_orders")
async def stats_connection_orders_handler(callback: CallbackQuery):
    """Ulanish buyurtmalari statistikasi"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        manager_stats = await get_manager_statistics_for_export()
        
        text = ("üìã **Ulanish Buyurtmalari Statistikasi**\n\n" if lang == "uz" else "üìã **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ**\n\n")
        
        if manager_stats and 'summary' in manager_stats:
            summary = manager_stats['summary']
            text += ("üìä **Umumiy ma'lumotlar:**\n" if lang == "uz" else "üìä **–û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è:**\n")
            text += (f"‚Ä¢ Jami buyurtmalar: {summary['total_orders']}\n" if lang == "uz" else f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {summary['total_orders']}\n")
            text += (f"‚Ä¢ Yangi: {summary['new_orders']}\n" if lang == "uz" else f"‚Ä¢ –ù–æ–≤—ã–µ: {summary['new_orders']}\n")
            text += (f"‚Ä¢ Jarayonda: {summary['in_progress_orders']}\n" if lang == "uz" else f"‚Ä¢ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {summary['in_progress_orders']}\n")
            text += (f"‚Ä¢ Yakunlangan: {summary['completed_orders']}\n" if lang == "uz" else f"‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ: {summary['completed_orders']}\n")
            text += (f"‚Ä¢ Yakunlanish foizi: {summary['completion_rate']}%\n" if lang == "uz" else f"‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {summary['completion_rate']}%\n")
            text += (f"‚Ä¢ Yagona mijozlar: {summary['unique_clients']}\n" if lang == "uz" else f"‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: {summary['unique_clients']}\n")
            text += (f"‚Ä¢ Tarif rejalari: {summary['unique_tariffs_used']}\n" if lang == "uz" else f"‚Ä¢ –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã: {summary['unique_tariffs_used']}\n")
        else:
            text += ("üìä Hozircha buyurtmalar mavjud emas." if lang == "uz" else "üìä –ü–æ–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–µ—Ç.")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_statistics_keyboard(lang),
            parse_mode="Markdown"
        )
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            ("‚ùå Ulanish buyurtmalari statistikasini yuklashda xatolik yuz berdi." if lang == "uz" else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π."),
            reply_markup=get_statistics_keyboard(lang)
        )

# Texnik buyurtmalar statistikasi
@router.callback_query(F.data == "stats_tech_orders")
async def stats_tech_orders_handler(callback: CallbackQuery):
    """Texnik buyurtmalar statistikasi"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        controller_stats = await get_controller_statistics_for_export()
        
        text = ("üîß **Texnik Buyurtmalar Statistikasi**\n\n" if lang == "uz" else "üîß **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞—è–≤–æ–∫**\n\n")
        
        if controller_stats and 'summary' in controller_stats:
            summary = controller_stats['summary']
            text += ("üìä **Umumiy ma'lumotlar:**\n" if lang == "uz" else "üìä **–û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è:**\n")
            text += (f"‚Ä¢ Jami arizalar: {summary['total_requests']}\n" if lang == "uz" else f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {summary['total_requests']}\n")
            text += (f"‚Ä¢ Yangi: {summary['new_requests']}\n" if lang == "uz" else f"‚Ä¢ –ù–æ–≤—ã–µ: {summary['new_requests']}\n")
            text += (f"‚Ä¢ Jarayonda: {summary['in_progress_requests']}\n" if lang == "uz" else f"‚Ä¢ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {summary['in_progress_requests']}\n")
            text += (f"‚Ä¢ Yakunlangan: {summary['completed_requests']}\n" if lang == "uz" else f"‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ: {summary['completed_requests']}\n")
            text += (f"‚Ä¢ Yakunlanish foizi: {summary['completion_rate']}%\n" if lang == "uz" else f"‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {summary['completion_rate']}%\n")
            text += (f"‚Ä¢ Yagona mijozlar: {summary['unique_clients']}\n" if lang == "uz" else f"‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: {summary['unique_clients']}\n")
            text += (f"‚Ä¢ Muammo turlari: {summary['unique_problem_types']}\n" if lang == "uz" else f"‚Ä¢ –¢–∏–ø—ã –ø—Ä–æ–±–ª–µ–º: {summary['unique_problem_types']}\n")
        else:
            text += ("üìä Hozircha texnik arizalar mavjud emas." if lang == "uz" else "üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç.")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_statistics_keyboard(lang),
            parse_mode="Markdown"
        )
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            ("‚ùå Texnik buyurtmalar statistikasini yuklashda xatolik yuz berdi." if lang == "uz" else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞—è–≤–æ–∫."),
            reply_markup=get_statistics_keyboard(lang)
        )

# Rollar bo'yicha statistika
@router.callback_query(F.data == "stats_by_roles")
async def stats_by_roles_handler(callback: CallbackQuery):
    """Rollar bo'yicha batafsil statistika"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        system_stats = await get_system_overview()
        
        text = ("üë§ **Rollar Bo'yicha Batafsil Statistika**\n\n" if lang == "uz" else "üë§ **–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º**\n\n")
        
        if 'users_by_role' in system_stats:
            for role, count in system_stats['users_by_role'].items():
                role_name = {
                    'admin': ('üëë Admin' if lang == 'uz' else 'üëë –ê–¥–º–∏–Ω'),
                    'client': ('üë§ Mijoz' if lang == 'uz' else 'üë§ –ö–ª–∏–µ–Ω—Ç'),
                    'manager': ('üë®‚Äçüíº Menejer' if lang == 'uz' else 'üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä'),
                    'junior_manager': ('üë®‚Äçüíª Kichik menejer' if lang == 'uz' else 'üë®‚Äçüíª –î–∂—É–Ω–∏–æ—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä'),
                    'controller': ('üîç Nazoratchi' if lang == 'uz' else 'üîç –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä'),
                    'technician': ('üîß Texnik' if lang == 'uz' else 'üîß –¢–µ—Ö–Ω–∏–∫'),
                    'warehouse': ('üì¶ Ombor' if lang == 'uz' else 'üì¶ –°–∫–ª–∞–¥'),
                    'callcenter_supervisor': ('üìû Call center supervisor' if lang == 'uz' else 'üìû –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ö–¶'),
                    'callcenter_operator': ('‚òéÔ∏è Call center operator' if lang == 'uz' else '‚òéÔ∏è –û–ø–µ—Ä–∞—Ç–æ—Ä –ö–¶')
                }.get(role, f"‚ùì {role}")
                text += f"{role_name}: **{count}**\n"
        else:
            text += ("üìä Rol statistikasi mavjud emas." if lang == "uz" else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_statistics_keyboard(lang),
            parse_mode="Markdown"
        )
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            ("‚ùå Rollar statistikasini yuklashda xatolik yuz berdi." if lang == "uz" else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ä–æ–ª—è–º."),
            reply_markup=get_statistics_keyboard(lang)
        )

# Oylik statistika
@router.callback_query(F.data == "stats_monthly")
async def stats_monthly_handler(callback: CallbackQuery):
    """Oylik statistika tendensiyalari"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        manager_stats = await get_manager_statistics_for_export()
        controller_stats = await get_controller_statistics_for_export()
        
        text = ("üìä **Oylik Statistika (Oxirgi 6 oy)**\n\n" if lang == "uz" else "üìä **–ú–µ—Å—è—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤)**\n\n")
        
        # Ulanish buyurtmalari oylik
        if manager_stats and 'monthly_trends' in manager_stats and manager_stats['monthly_trends']:
            text += ("üìã **Ulanish buyurtmalari:**\n" if lang == "uz" else "üìã **–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è:**\n")
            for month_data in manager_stats['monthly_trends'][:3]:  # Faqat oxirgi 3 oy
                text += (f"‚Ä¢ {month_data['month']}: {month_data['total_orders']} (‚úÖ {month_data['completed_orders']})\n")
            text += "\n"
        
        # Texnik buyurtmalar oylik
        if controller_stats and 'monthly_trends' in controller_stats and controller_stats['monthly_trends']:
            text += ("üîß **Texnik buyurtmalar:**\n" if lang == "uz" else "üîß **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞—è–≤–∫–∏:**\n")
            for month_data in controller_stats['monthly_trends'][:3]:  # Faqat oxirgi 3 oy
                text += (f"‚Ä¢ {month_data['month']}: {month_data['total_requests']} (‚úÖ {month_data['completed_requests']})\n")
        
        if not (manager_stats.get('monthly_trends') or controller_stats.get('monthly_trends')):
            text += ("üìä Oylik statistika ma'lumotlari mavjud emas." if lang == "uz" else "üìä –î–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Å—è—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_statistics_keyboard(lang),
            parse_mode="Markdown"
        )
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            ("‚ùå Oylik statistikani yuklashda xatolik yuz berdi." if lang == "uz" else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ—Å—è—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."),
            reply_markup=get_statistics_keyboard(lang)
        )

# Close statistics menu
@router.callback_query(F.data == "stats_close")
async def close_statistics_handler(callback: CallbackQuery):
    """Close statistics menu and return to main menu"""
    await callback.answer()
    try:
        await callback.message.delete()
    except Exception:
        pass
    lang = await get_user_language(callback.from_user.id) or "uz"
    await callback.message.answer(
        ("Statistika bo'limi yopildi" if lang == "uz" else "–†–∞–∑–¥–µ–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç"),
    )
