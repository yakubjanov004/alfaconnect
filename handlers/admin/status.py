from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from datetime import datetime

from database.admin_system_status_queries import (
    get_system_overview,
    get_orders_by_status,
    get_recent_activity,
    get_performance_metrics,
    get_database_info
)
from keyboards.admin_buttons import get_system_status_keyboard
from database.language_queries import get_user_language

router = Router()

@router.message(F.text.in_( ["üîß Tizim holati", "üîß –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"]))
async def status_handler(message: Message, state: FSMContext = None):
    """Tizim holati asosiy menyusi"""
    if state:
        await state.clear()
    
    lang = await get_user_language(message.from_user.id) or "uz"
    
    text = ("üîß **Tizim holati boshqaruvi**\n\n" if lang == "uz" else "üîß **–ü–∞–Ω–µ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã**\n\n")
    text += ("Quyidagi bo'limlardan birini tanlang:" if lang == "uz" else "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤:")
    
    await message.answer(
        text,
        reply_markup=get_system_status_keyboard(lang),
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "system_overview")
async def system_overview_handler(callback: CallbackQuery):
    """Tizimning umumiy ko'rinishi"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        stats = await get_system_overview()
        
        text = ("üìä **Tizimning umumiy ko'rinishi**\n\n" if lang == "uz" else "üìä **–û–±—â–∏–π –æ–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã**\n\n")
        
        # Foydalanuvchilar statistikasi
        text += ("üë• **Foydalanuvchilar:**\n" if lang == "uz" else "üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**\n")
        text += (f"‚Ä¢ Jami: {stats['total_users']}\n" if lang == "uz" else f"‚Ä¢ –í—Å–µ–≥–æ: {stats['total_users']}\n")
        text += (f"‚Ä¢ Faol: {stats['active_users']}\n" if lang == "uz" else f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ: {stats['active_users']}\n")
        text += (f"‚Ä¢ Bloklangan: {stats['blocked_users']}\n\n" if lang == "uz" else f"‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {stats['blocked_users']}\n\n")
        
        # Rollar bo'yicha
        text += ("üë§ **Rollar bo'yicha:**\n" if lang == "uz" else "üë§ **–ü–æ —Ä–æ–ª—è–º:**\n")
        for role, count in stats['users_by_role'].items():
            role_name = {
                'admin': ('Admin' if lang == 'uz' else '–ê–¥–º–∏–Ω'),
                'client': ('Mijoz' if lang == 'uz' else '–ö–ª–∏–µ–Ω—Ç'),
                'manager': ('Menejer' if lang == 'uz' else '–ú–µ–Ω–µ–¥–∂–µ—Ä'),
                'junior_manager': ('Kichik menejer' if lang == 'uz' else '–î–∂—É–Ω–∏–æ—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä'),
                'controller': ('Nazoratchi' if lang == 'uz' else '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä'),
                'technician': ('Texnik' if lang == 'uz' else '–¢–µ—Ö–Ω–∏–∫'),
                'warehouse': ('Ombor' if lang == 'uz' else '–°–∫–ª–∞–¥'),
                'callcenter_supervisor': ('Call center supervisor' if lang == 'uz' else '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ö–¶'),
                'callcenter_operator': ('Call center operator' if lang == 'uz' else '–û–ø–µ—Ä–∞—Ç–æ—Ä –ö–¶')
            }.get(role, role)
            text += f"‚Ä¢ {role_name}: {count}\n"
        
        text += ("\nüìù **Zayavkalar:**\n" if lang == "uz" else "\nüìù **–ó–∞—è–≤–∫–∏:**\n")
        text += (f"‚Ä¢ Ulanish: {stats['total_connection_orders']}\n" if lang == "uz" else f"‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {stats['total_connection_orders']}\n")
        text += (f"‚Ä¢ Texnik: {stats['total_technician_orders']}\n" if lang == "uz" else f"‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ: {stats['total_technician_orders']}\n")
        text += (f"‚Ä¢ Xodim: {stats['total_saff_orders']}\n\n" if lang == "uz" else f"‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: {stats['total_saff_orders']}\n\n")
        
        text += ("üìÖ **Bugungi zayavkalar:**\n" if lang == "uz" else "üìÖ **–ó–∞—è–≤–∫–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:**\n")
        text += (f"‚Ä¢ Ulanish: {stats['today_connection_orders']}\n" if lang == "uz" else f"‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {stats['today_connection_orders']}\n")
        text += (f"‚Ä¢ Texnik: {stats['today_technician_orders']}\n\n" if lang == "uz" else f"‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ: {stats['today_technician_orders']}\n\n")
        
        text += (f"üïê Yangilangan: {datetime.now().strftime('%H:%M:%S')}" if lang == "uz" else f"üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_system_status_keyboard(lang),
            parse_mode="Markdown"
        )
        
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            (f"‚ùå Xatolik yuz berdi: {str(e)}" if lang == "uz" else f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"),
            reply_markup=get_system_status_keyboard(lang)
        )

@router.callback_query(F.data == "system_close")
async def system_close_handler(callback: CallbackQuery):
    """Tizim holati menyusini yopish"""
    await callback.answer()
    
    try:
        # Xabarni o'chirish
        await callback.message.delete()
        
    except Exception as e:
        # Agar o'chirib bo'lmasa, oddiy xabar bilan almashtirish
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            ("‚úÖ Tizim holati menyusi yopildi." if lang == "uz" else "‚úÖ –ú–µ–Ω—é —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫—Ä—ã—Ç–æ."),
            reply_markup=None
        )

@router.callback_query(F.data == "system_orders")
async def system_orders_handler(callback: CallbackQuery):
    """Zayavkalar holati"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        orders_data = await get_orders_by_status()
        
        text = ("üìù **Zayavkalar holati**\n\n" if lang == "uz" else "üìù **–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–æ–∫**\n\n")
        
        # Ulanish zayavkalari
        text += ("üîó **Ulanish zayavkalari:**\n" if lang == "uz" else "üîó **–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:**\n")
        for status, count in orders_data['connection_orders'].items():
            status_name = {
                'new': ('Yangi' if lang == 'uz' else '–ù–æ–≤–∞—è'),
                'in_manager': ('Menejerda' if lang == 'uz' else '–£ –º–µ–Ω–µ–¥–∂–µ—Ä–∞'),
                'in_junior_manager': ('Kichik Menejerda' if lang == 'uz' else '–£ –¥–∂—É–Ω–∏–æ—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä–∞'),
                'in_controller': ('Nazoratchida' if lang == 'uz' else '–£ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞'),
                'in_technician': ('Texnikda' if lang == 'uz' else '–£ —Ç–µ—Ö–Ω–∏–∫–∞'),
                'in_technician_work': ('Texnik ishda' if lang == 'uz' else '–í —Ä–∞–±–æ—Ç–µ —É —Ç–µ—Ö–Ω–∏–∫–∞'),
                'completed': ('Bajarilgan' if lang == 'uz' else '–ó–∞–≤–µ—Ä—à–µ–Ω–∞')
            }.get(status, status)
            text += f"‚Ä¢ {status_name}: {count}\n"
        
        text += ("\nüîß **Texnik zayavkalar:**\n" if lang == "uz" else "\nüîß **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞—è–≤–∫–∏:**\n")
        for status, count in orders_data['technician_orders'].items():
            status_name = {
                'new': ('Yangi' if lang == 'uz' else '–ù–æ–≤–∞—è'),
                'in_controller': ('Nazoratchida' if lang == 'uz' else '–£ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞'),
                'in_technician': ('Texnikda' if lang == 'uz' else '–£ —Ç–µ—Ö–Ω–∏–∫–∞'),
                'in_technician_work': ('Texnik ishda' if lang == 'uz' else '–í —Ä–∞–±–æ—Ç–µ —É —Ç–µ—Ö–Ω–∏–∫–∞'),
                'completed': ('Bajarilgan' if lang == 'uz' else '–ó–∞–≤–µ—Ä—à–µ–Ω–∞')
            }.get(status, status)
            text += f"‚Ä¢ {status_name}: {count}\n"
        
        text += ("\nüë• **Xodim zayavkalari:**\n" if lang == "uz" else "\nüë• **–ó–∞—è–≤–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:**\n")
        for status, count in orders_data['saff_orders'].items():
            status_name = {
                'new': ('Yangi' if lang == 'uz' else '–ù–æ–≤–∞—è'),
                'in_manager': ('Menejerda' if lang == 'uz' else '–£ –º–µ–Ω–µ–¥–∂–µ—Ä–∞'),
                'in_junior_manager': ('Kichik Menejerda' if lang == 'uz' else '–£ –¥–∂—É–Ω–∏–æ—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä–∞'),
                'in_controller': ('Nazoratchida' if lang == 'uz' else '–£ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞'),
                'completed': ('Bajarilgan' if lang == 'uz' else '–ó–∞–≤–µ—Ä—à–µ–Ω–∞')
            }.get(status, status)
            text += f"‚Ä¢ {status_name}: {count}\n"
        
        text += (f"\nüïê Yangilangan: {datetime.now().strftime('%H:%M:%S')}" if lang == "uz" else f"\nüïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_system_status_keyboard(lang),
            parse_mode="Markdown"
        )
        
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            (f"‚ùå Xatolik yuz berdi: {str(e)}" if lang == "uz" else f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"),
            reply_markup=get_system_status_keyboard(lang)
        )

@router.callback_query(F.data == "system_performance")
async def system_performance_handler(callback: CallbackQuery):
    """Ishlash ko'rsatkichlari"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        metrics = await get_performance_metrics()
        
        text = ("‚ö° **Ishlash ko'rsatkichlari**\n\n" if lang == "uz" else "‚ö° **–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏**\n\n")
        
        text += ("üìà **Bajarilish foizi:**\n" if lang == "uz" else "üìà **–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:**\n")
        text += ((f"‚Ä¢ Ulanish zayavkalari: {metrics['connection_completion_rate']:.1f}%\n") if lang == "uz" else (f"‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {metrics['connection_completion_rate']:.1f}%\n"))
        text += ((f"‚Ä¢ Texnik zayavkalar: {metrics['technician_completion_rate']:.1f}%\n\n") if lang == "uz" else (f"‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ: {metrics['technician_completion_rate']:.1f}%\n\n"))
        
        text += ("‚è± **O'rtacha bajarilish vaqti:**\n" if lang == "uz" else "‚è± **–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:**\n")
        text += ((f"‚Ä¢ {metrics['avg_completion_hours']:.1f} soat\n\n") if lang == "uz" else (f"‚Ä¢ {metrics['avg_completion_hours']:.1f} —á.\n\n"))
        
        text += ("üèÜ **Eng faol xodimlar:**\n" if lang == "uz" else "üèÜ **–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:**\n")
        for staff in metrics['active_staff'][:5]:
            text += f"‚Ä¢ {staff['full_name']} ({staff['role']}): {staff['activity_count']} faoliyat\n"
        
        text += (f"\nüïê Yangilangan: {datetime.now().strftime('%H:%M:%S')}" if lang == "uz" else f"\nüïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_system_status_keyboard(lang),
            parse_mode="Markdown"
        )
        
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            (f"‚ùå Xatolik yuz berdi: {str(e)}" if lang == "uz" else f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"),
            reply_markup=get_system_status_keyboard(lang)
        )

@router.callback_query(F.data == "system_activity")
async def system_activity_handler(callback: CallbackQuery):
    """So'nggi faoliyat"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        activities = await get_recent_activity()
        
        text = ("üîÑ **So'nggi 10ta faoliyat**\n\n" if lang == "uz" else "üîÑ **–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–µ–π—Å—Ç–≤–∏–π**\n\n")
        
        if not activities:
            text += ("Hech qanday faoliyat topilmadi." if lang == "uz" else "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        else:
            for activity in activities[:10]:
                activity_type = {
                    'connection_order': ('üîó Ulanish' if lang == 'uz' else 'üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ'),
                    'technician_order': ('üîß Texnik' if lang == 'uz' else 'üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è'),
                    'saff_order': ('üë• Xodim' if lang == 'uz' else 'üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫')
                }.get(activity['type'], activity['type'])
                
                status_name = {
                    'new': ('Yangi' if lang == 'uz' else '–ù–æ–≤–∞—è'),
                    'in_manager': ('Menejerda' if lang == 'uz' else '–£ –º–µ–Ω–µ–¥–∂–µ—Ä–∞'),
                    'in_junior_manager': ('Kichik Menejerda' if lang == 'uz' else '–£ –¥–∂—É–Ω–∏–æ—Ä-–º–µ–Ω–µ–¥–∂–µ—Ä–∞'), 
                    'in_controller': ('Nazoratchida' if lang == 'uz' else '–£ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞'),
                    'in_technician': ('Texnikda' if lang == 'uz' else '–£ —Ç–µ—Ö–Ω–∏–∫–∞'),
                    'in_technician_work': ('Texnik ishda' if lang == 'uz' else '–í —Ä–∞–±–æ—Ç–µ —É —Ç–µ—Ö–Ω–∏–∫–∞'),
                    'in_diagnostics': ('Diagnostikada' if lang == 'uz' else '–ù–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ'),
                    'in_repairs': ("Ta'mirda" if lang == 'uz' else '–í —Ä–µ–º–æ–Ω—Ç–µ'),
                    'in_warehouse': ('Omborda' if lang == 'uz' else '–ù–∞ —Å–∫–ª–∞–¥–µ'),
                    'completed': ('Bajarilgan' if lang == 'uz' else '–ó–∞–≤–µ—Ä—à–µ–Ω–∞'),
                    'betweencontrollertechnician': ('Nazoratchi ‚Üí Texnik' if lang == 'uz' else '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä ‚Üí –¢–µ—Ö–Ω–∏–∫'),
                    'between_controller_technician': ('Nazoratchi ‚Üí Texnik' if lang == 'uz' else '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä ‚Üí –¢–µ—Ö–Ω–∏–∫'),
                    'pending': ('Kutilmoqda' if lang == 'uz' else '–û–∂–∏–¥–∞–µ—Ç'),
                    'assigned': ('Tayinlangan' if lang == 'uz' else '–ù–∞–∑–Ω–∞—á–µ–Ω–∞'),
                    'cancelled': ('Bekor qilingan' if lang == 'uz' else '–û—Ç–º–µ–Ω–µ–Ω–∞')
                }.get(activity['status'], activity['status'])
                
                time_str = activity['updated_at'].strftime('%H:%M')
                text += f"‚Ä¢ {activity_type} #{activity['id']} - {status_name} ({time_str})\n"
        
        text += (f"\nüïê Yangilangan: {datetime.now().strftime('%H:%M:%S')}" if lang == "uz" else f"\nüïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_system_status_keyboard(lang),
            parse_mode="Markdown"
        )
        
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            (f"‚ùå Xatolik yuz berdi: {str(e)}" if lang == "uz" else f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"),
            reply_markup=get_system_status_keyboard(lang)
        )

@router.callback_query(F.data == "system_database")
async def system_database_handler(callback: CallbackQuery):
    """Ma'lumotlar bazasi haqida ma'lumot"""
    await callback.answer()
    
    try:
        lang = await get_user_language(callback.from_user.id) or "uz"
        db_info = await get_database_info()
        
        text = ("üíæ **Ma'lumotlar bazasi**\n\n" if lang == "uz" else "üíæ **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö**\n\n")
        
        text += (f"üìä **Umumiy hajm:** {db_info['database_size']}\n" if lang == "uz" else f"üìä **–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:** {db_info['database_size']}\n")
        text += (f"üîó **Faol ulanishlar:** {db_info['active_connections']}\n\n" if lang == "uz" else f"üîó **–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:** {db_info['active_connections']}\n\n")
        
        text += ("üìã **Jadvallar hajmi:**\n" if lang == "uz" else "üìã **–†–∞–∑–º–µ—Ä—ã —Ç–∞–±–ª–∏—Ü:**\n")
        for table in db_info['table_sizes'][:8]:
            text += f"‚Ä¢ {table['tablename']}: {table['size']}\n"
        
        text += (f"\nüïê Yangilangan: {datetime.now().strftime('%H:%M:%S')}" if lang == "uz" else f"\nüïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}")
        
        await callback.message.edit_text(
            text,
            reply_markup=get_system_status_keyboard(lang),
            parse_mode="Markdown"
        )
        
    except Exception as e:
        lang = await get_user_language(callback.from_user.id) or "uz"
        await callback.message.edit_text(
            (f"‚ùå Xatolik yuz berdi: {str(e)}" if lang == "uz" else f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"),
            reply_markup=get_system_status_keyboard(lang)
        )

@router.callback_query(F.data == "system_refresh")
async def system_refresh_handler(callback: CallbackQuery):
    """Tizim holatini yangilash"""
    lang = await get_user_language(callback.from_user.id) or "uz"
    await callback.answer("üîÑ Yangilanmoqda..." if lang == "uz" else "üîÑ –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è...")
    
    try:
        # Yangilangan asosiy menyu matnini yaratish
        text = (f"üîß **Tizim holati boshqaruvi**\n\n" if lang == "uz" else f"üîß **–ü–∞–Ω–µ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã**\n\n")
        text += (f"Quyidagi bo'limlardan birini tanlang:\n\n" if lang == "uz" else f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤:\n\n")
        text += (f"üìä **Umumiy ko'rinish** - Tizim statistikasi\n" if lang == "uz" else f"üìä **–û–±—â–∏–π –æ–±–∑–æ—Ä** - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n")
        text += (f"üìã **Zayavkalar holati** - Barcha zayavkalar\n" if lang == "uz" else f"üìã **–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–æ–∫** - –í—Å–µ –∑–∞—è–≤–∫–∏\n")
        text += (f"‚ö° **Ishlash ko'rsatkichlari** - Tizim samaradorligi\n" if lang == "uz" else f"‚ö° **–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏** - –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã\n")
        text += (f"üîÑ **So'nggi faoliyat** - Oxirgi 10tasi\n" if lang == "uz" else f"üîÑ **–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å** - –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10\n")
        text += (f"üíæ **Ma'lumotlar bazasi** - DB holati\n\n" if lang == "uz" else f"üíæ **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö** - –°–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î\n\n")
        text += (f"üïê Yangilangan: {datetime.now().strftime('%H:%M:%S')}" if lang == "uz" else f"üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}")
        
        # Xabarni edit qilish
        await callback.message.edit_text(
            text,
            reply_markup=get_system_status_keyboard(lang),
            parse_mode="Markdown"
        )
        
    except Exception as e:
        await callback.message.edit_text(
            (f"‚ùå Xatolik yuz berdi: {str(e)}" if lang == "uz" else f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"),
            reply_markup=get_system_status_keyboard(lang)
        )
